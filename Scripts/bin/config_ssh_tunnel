#!/bin/bash
# An automatic script to config SSH tunnels in a cluster
# Xiaming Chen
#  2015-07-20
set -e

HOSTFILE=~/bin/hosts
SSHOME=~/.ssh
PRTKEY=$SSHOME/id_rsa
PUBKEY=$SSHOME/id_rsa.pub
AUTHKEYS=$SSHOME/authorized_keys
KGOPT=

if [ ! -e $HOSTFILE ] || [ -z `cat $HOSTFILE` ]; then
  echo "$HOSTFILE does not exist or is empty, exiting."
  exit 1;
fi

echo "generating SSH key into '$SSHOME' ..."
if [ -e $PRTKEY ]; then
  mkdir -p $SSHOME/keys.bk 2>/dev/null
  mv $SSHOME/id_rsa* $SSHOME/keys.bk 2>/dev/null
fi
ssh-keygen -b 2048 -t rsa -f $PRTKEY -q -N ""

THISKEY=`cat $PUBKEY`
if [ -e $AUTHKEYS ]; then
  cp $AUTHKEYS $AUTHKEYS.bk
fi
echo $THISKEY >> $AUTHKEYS

RCMD="touch $SSHOME/this_is_a_test_file;
mkdir -p ${SSHOME}/keys.bk > /dev/null 2>&1;
mv ${SSHOME}/id_rsa* ${SSHOME}/keys.bk > /dev/null 2>&1;
ssh-keygen -b 2048 -t rsa -f ${PRTKEY} -q -N '';
cp ${AUTHKEYS} ${AUTHKEYS}.bk > /dev/null 2>&1;
echo ${THISKEY} >> ${AUTHKEYS}
"

# generate keys for all hosts
for host in $(cat $HOSTFILE); do
  if [ $host != `hostname` ]; then
    echo "generating ssh key for $host"
    echo $RCMD | ssh $(whoami)@$host
    ssh-copy-id $(whoami)@$host
  fi
done

# dispatch authorized_keys
for host in $(cat $HOSTFILE); do
  if [ $host != `hostname` ]; then
    echo "$host: adding $AUTHKEYS"
    scp $AUTHKEYS $(whoami)@$host:$SSHOME > /dev/null 2>&1
  fi
done

echo "Done!"
